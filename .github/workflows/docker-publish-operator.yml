name: Docker

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
#  schedule:
#    - cron: '18 12 * * *'
  push:
#    branches: [ "trunk" ]
    # Publish semver tags as releases.
    tags: [ 'v*.*.*-*.*.*' ]
#  pull_request:
#    branches: [ "trunk" ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME_OPERATOR: mysql-operator 
  IMAGE_NAME_ROUTER: mysql-router
  IMAGE_NAME_SERVER: mysql-server


jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3


      # Workaround: https://github.com/docker/build-push-action/issues/461
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2

      # Required to do muli arch builds
      - name: Install emulators
        run: sudo apt-get install -y qemu-user-static

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set Tag Env
        run: echo "TAG=${GITHUB_REF#refs/*/v}" >> $GITHUB_ENV
      
      - name: Set mysql version env
        run: echo "MYSQL_SHELL_VERSION=${TAG%-*}" >> $GITHUB_ENV
      
      - name: Set operator version env
        run: echo "MYSQL_OPERATOR_VERSION=${TAG#*-}" >> $GITHUB_ENV

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta-operator
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_OPERATOR }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker mysql-operator image
        id: build-and-push-operator
        uses: docker/build-push-action@v3
        with:
          context: ./mysql-operator
          push: ${{ github.event_name != 'pull_request' }}
          #tags: "64bitint/mysql-operator:8.0.31-2.0.7"
          #tags: ${{ steps.meta.outputs.tags }}
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_OPERATOR }}:${{ env.MYSQL_SHELL_VERSION }}-${{ env.MYSQL_OPERATOR_VERSION }}
          labels: ${{ steps.meta-operator.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64
          build-args:
            MYSQL_SHELL_VERSION: ${{ env.MYSQL_SHELL_VERSION }}
            MYSQL_OPERATOR_VERSION: ${{ env.MYSQL_OPERATOR_VERSION }}
                
      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta-router
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_ROUTER }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker mysql-operator image
        id: build-and-push-router
        uses: docker/build-push-action@v3
        with:
          context: ./mysql-router
          push: ${{ github.event_name != 'pull_request' }}
          #tags: "64bitint/mysql-operator:8.0.31-2.0.7"
          #tags: ${{ steps.meta.outputs.tags }}
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_ROUTER }}:${{ env.MYSQL_SHELL_VERSION }}
          labels: ${{ steps.meta-router.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64
          build-args:
            MYSQL_SHELL_VERSION: ${{ env.MYSQL_SHELL_VERSION }}
            MYSQL_OPERATOR_VERSION: ${{ env.MYSQL_OPERATOR_VERSION }}

      - name: Copy mysql server image
        id: pull-and-push-server
        run: |
          curl -L https://github.com/regclient/regclient/releases/latest/download/regctl-linux-amd64 >regctl
          chmod 755 regctl
          regctl image copy mysql/mysql-server:${{ env.MYSQL_SHELL_VERSION }} ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_SERVER }}:${{ env.MYSQL_SHELL_VERSION }}
